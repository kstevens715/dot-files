" =============== Auto-reload ===============
set nocompatible
filetype off

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Plugin 'gmarik/Vundle.vim'

Plugin 'jlanzarotta/bufexplorer'
Plugin 'bling/vim-airline'
Plugin 'chrisbra/csv.vim'
Plugin 'ctrlpvim/ctrlp.vim'
Plugin 'kchmck/vim-coffee-script'
Plugin 'mattn/gist-vim'
Plugin 'mattn/webapi-vim'
Plugin 'mileszs/ack.vim'
Plugin 'ngmy/vim-rubocop'
Plugin 'posva/vim-vue'
Plugin 'sickill/vim-monokai'
Plugin 'tomtom/tcomment_vim'
Plugin 'tpope/vim-endwise'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-rails'
Plugin 'vim-scripts/SQLUtilities'
Plugin 'vim-scripts/Align'
Plugin 'google/vim-searchindex'

Plugin 'leafgarland/typescript-vim'
Plugin 'pangloss/vim-javascript'
Plugin 'mxw/vim-jsx'
"Plugin 'ianks/vim-tsx'

call vundle#end()
filetype plugin indent on
aug AutoloadVimrc
  au!
  au BufWritePost ~/dot-files/vim/vimrc source $MYVIMRC
aug END

runtime macros/matchit.vim

" Use Vim settings, rather then Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
set nocompatible

runtime bundle.vim

set backspace=2 " Backspace not working without this.
set clipboard=unnamedplus " Use system clipboard
set colorcolumn=141 " Show vertical line after 140 chars
set noswapfile
set ignorecase " Lowercase searches ignore casing
set incsearch " Incremental searching as you type
set laststatus=2 " Always show a statusline
set linebreak " break line on certain characters: \" ^I!@*-+;:,./?\"
set nofoldenable " Disable folding
set nowrap " Don't wrap lines
set number " Line numbers on
set smartcase " Uppercase searching does not ignore casing
set norelativenumber " No Relative line numbers (default)
set pdev=Brother_HL-L2300D_series " Set default printer name to print with :ha

" Turn off Ex mode
nnoremap Q <nop>

" ================= CtrlP Settings ===============
let g:ctrlp_map = '<Leader>t'
let g:ctrlp_user_command = ['.git/', 'cd %s && git ls-files --exclude-standard -co']
let ctrlp_max_height=100
let g:ctrlp_max_files=0

" ================= Autocompletion ===============
filetype plugin on
set omnifunc=syntaxcomplete#Complete

" psql files should be highlighted as sql
au BufNewFile,BufRead *.psql set filetype=sql
au BufNewFile,BufRead Guardfile set filetype=ruby
au BufNewFile,BufRead Dockerfile* set filetype=dockerfile
au BufNewFile,BufRead Gemfile* set filetype=ruby
au BufNewFile,BufRead *.mustache set filetype=html

let g:ackprg="ag --vimgrep"

" ================ Indentation ======================
filetype indent plugin on
set autoindent
set smartindent
set smarttab
set shiftwidth=2
set softtabstop=2
set tabstop=2
set expandtab

" ================ Theme ======================
set t_Co=256
syntax on
colorscheme monokai

" Highlight trailing whitespace
highlight ExtraWhitespace ctermbg=red guibg=red
match ExtraWhitespace /\s\+$/
autocmd BufWinEnter * match ExtraWhitespace /\s\+$/
autocmd InsertEnter * match ExtraWhitespace /\s\+\%#\@<!$/
autocmd InsertLeave * match ExtraWhitespace /\s\+$/
autocmd BufWinLeave * call clearmatches()

" ================ Keymaps ======================
nnoremap <silent> <Leader>p :CtrlPBuffer<CR>

" Quick exit of insert mode
inoremap jj <Esc>

" CtrlP Helpers
nmap <C-P> <esc>:CtrlP <CR>
nmap <leader>b :CtrlPBuffer<CR>

nmap <silent> <C-h> :tabprevious <CR>
nmap <silent> <C-l> :tabnext <CR>
nmap <silent> <C-n> :tabnew <CR>

" The following three commands enables pasting code snippets
" using F2 key (disables auto-indenting)
nnoremap <F2> :set invpaste paste?<CR>
set pastetoggle=<F2>

" F6 toggles spell checking
map <F6> :setlocal spell! spelllang=en_us<CR>
imap <F6> <C-o>:setlocal spell! spelllang=en_us<CR>

" =============== Command Aliases ===============
command! -bang WQ wq<bang>
command! -bang Wq wq<bang>
command! -bang W w<bang>
command! -bang Q q<bang>
command! -bang Qa qa<bang>

" =============== Abbreviations ===============
:ab rbd require "debugger"; debugger
:ab rdb require "debugger"; debugger
:ab bye require "byebug"; byebug
:ab pry binding.pry
:ab screenshot page.save_screenshot(Rails.root.join('test.png'), full: true)
