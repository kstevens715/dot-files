" =============== Auto-reload ===============
aug AutoloadVimrc
  au!
  au BufWritePost ~/dot-files/vim/vimrc source $MYVIMRC
aug END

runtime macros/matchit.vim

" Use Vim settings, rather then Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
set nocompatible

runtime bundle.vim

set backspace=2 " Backspace not working without this.
set clipboard=unnamedplus " Use system clipboard
set colorcolumn=141 " Show vertical line after 140 chars
set noswapfile
set ignorecase " Lowercase searches ignore casing
set incsearch " Incremental searching as you type
set laststatus=2 " Always show a statusline
set linebreak " break line on certain characters: \" ^I!@*-+;:,./?\"
set nofoldenable " Disable folding
set nowrap " Don't wrap lines
set number " Line numbers on
set smartcase " Uppercase searching does not ignore casing
set norelativenumber " No Relative line numbers (default)
set pdev=Brother_HL-L2300D_series " Set default printer name to print with :ha

" Automatically reformat text, for example by wrapping text in a commit message after editing.
" You can also shut this option off, and highlight text and press gq to do the
" same thing on a selection manually.
set formatoptions+=aw

" Turn off Ex mode
nnoremap Q <nop>

" ================= CtrlP Settings ===============
let g:ctrlp_map = '<Leader>t'
let g:ctrlp_user_command = ['.git/', 'cd %s && git ls-files --exclude-standard -co']
let ctrlp_max_height=100
let g:ctrlp_max_files=0

" ================= Autocompletion ===============
filetype plugin on
set omnifunc=syntaxcomplete#Complete

" psql files should be highlighted as sql
au BufNewFile,BufRead *.psql set filetype=sql
au BufNewFile,BufRead Guardfile set filetype=ruby
au BufNewFile,BufRead Dockerfile* set filetype=dockerfile
au BufNewFile,BufRead Gemfile* set filetype=ruby
au BufNewFile,BufRead *.mustache set filetype=html

let g:ackprg="ag --vimgrep"

" ================ Indentation ======================
filetype indent plugin on
set autoindent
set smartindent
set smarttab
set shiftwidth=2
set softtabstop=2
set tabstop=2
set expandtab

" ================ Theme ======================
set t_Co=256
syntax on
colorscheme monokai

" Highlight trailing whitespace
highlight ExtraWhitespace ctermbg=red guibg=red
match ExtraWhitespace /\s\+$/
autocmd BufWinEnter * match ExtraWhitespace /\s\+$/
autocmd InsertEnter * match ExtraWhitespace /\s\+\%#\@<!$/
autocmd InsertLeave * match ExtraWhitespace /\s\+$/
autocmd BufWinLeave * call clearmatches()

runtime keymaps.vim
runtime abbreviations.vim
